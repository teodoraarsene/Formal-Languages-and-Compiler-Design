q 0
[]
['S']
<-----> EXPAND <----->q 0
[('S', 0)]
['a', 'A', 'd']
<-----> ADVANCE <----->q 1
[('S', 0), 'a']
['A', 'd']
<-----> EXPAND <----->q 1
[('S', 0), 'a', ('A', 0)]
['b', 'd']
<-----> ADVANCE <----->q 2
[('S', 0), 'a', ('A', 0), 'b']
['d']
<-----> MOMENTARY INSUCCESS <----->b 2
[('S', 0), 'a', ('A', 0), 'b']
['d']
<-----> BACK <----->b 1
[('S', 0), 'a', ('A', 0)]
['b', 'd']
<-----> ANOTHER TRY <----->q 1
[('S', 0), 'a', ('A', 1)]
['b', 'A', 'd']
<-----> ADVANCE <----->q 2
[('S', 0), 'a', ('A', 1), 'b']
['A', 'd']
<-----> EXPAND <----->q 2
[('S', 0), 'a', ('A', 1), 'b', ('A', 0)]
['b', 'd']
<-----> ADVANCE <----->q 3
[('S', 0), 'a', ('A', 1), 'b', ('A', 0), 'b']
['d']
<-----> ADVANCE <----->q 4
[('S', 0), 'a', ('A', 1), 'b', ('A', 0), 'b', 'd']
[]
<-----> SUCCESS <----->[('S', 0), 'a', ('A', 1), 'b', ('A', 0), 'b', 'd']input sequence is accepted
----- END ------

<-----> PARSING TREE <----->
INDEX INFO PARENT LEFT_SIBLING
0 S  -1  -1
1 a  0  1
2 A  -1  -1
3 b  2  3
4 A  -1  -1
5 b  4  -1
6 d  -1  -1
